/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-upgrade-interactive-filter",
factory: function (require) {
"use strict";var plugin=(()=>{var p=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var m=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,o)=>(typeof require<"u"?require:e)[o]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')});var h=(t,e)=>{for(var o in e)p(t,o,{get:e[o],enumerable:!0})},v=(t,e,o,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of P(e))!g.call(t,r)&&r!==o&&p(t,r,{get:()=>e[r],enumerable:!(s=w(e,r))||s.enumerable});return t};var C=t=>v(p({},"__esModule",{value:!0}),t);var y={};h(y,{default:()=>x});var l=m("@yarnpkg/plugin-interactive-tools"),u=m("clipanion"),i=m("@yarnpkg/core"),c=class extends l.UpgradeInteractiveCommand{workspaces=u.Option.Rest({required:1});static paths=[["upgrade-interactive-filter"]];async execute(){if(!this.workspaces||this.workspaces.length===0)return super.execute();let e=i.Project.find;i.Project.find=async(o,s)=>{let{project:r,...a}=await e.call(i.Project,o,s),n=this.createFilteredProject(r,this.workspaces);return{...a,project:n}};try{return await super.execute()}finally{i.Project.find=e}}createFilteredProject(e,o){let s=new Set(o),r=[];for(let a of e.workspaces){let n=a.manifest.name?.name||a.relativeCwd;if(s.has(n)){r.push(a);continue}for(let k of s){let f=Array.from(e.workspaces).find(d=>(d.manifest.name?.name||d.relativeCwd)===k);if(f&&a.relativeCwd.startsWith(f.relativeCwd+"/")){r.push(a);break}}}return console.log("filtered workspaces:",r.map(a=>a.manifest.name?.name||a.relativeCwd)),new Proxy(e,{get(a,n){return n==="workspaces"?r:a[n]}})}};var j={commands:[c]},x=j;return C(y);})();
return plugin;
}
};
